{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\hosfit\\\\hosFIt\\\\front\\\\src\\\\Components\\\\Ktas.js\";\nimport React from \"react\";\nimport \"../Components/Ktas.css\";\nimport { PieChart, Pie, Cell, Legend, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ktas = () => {\n  const totalBeds = 100; // 총 병상 수\n  const usedBeds = 78; // 사용 중인 병상 수\n  const unusedBeds = totalBeds - usedBeds; // 미사용 병상 수\n\n  // 사용 중인 병상의 KTAS 레벨 비율\n  const tasData = [{\n    name: \"KTAS 1\",\n    value: 30,\n    color: \"#0000FF\"\n  },\n  // 파란색 (KTAS 1)\n  {\n    name: \"KTAS 2\",\n    value: 20,\n    color: \"#FF0000\"\n  },\n  // 빨간색 (KTAS 2)\n  {\n    name: \"KTAS 3\",\n    value: 10,\n    color: \"#FFFF00\"\n  },\n  // 노란색 (KTAS 3)\n  {\n    name: \"KTAS 4\",\n    value: 10,\n    color: \"#00FF00\"\n  },\n  // 초록색 (KTAS 4)\n  {\n    name: \"KTAS 5\",\n    value: 8,\n    color: \"#FFFFFF\"\n  } // 흰색 (KTAS 5)\n  ];\n\n  // 사용 중 vs 미사용 병상을 포함한 데이터\n  const fullData = [...tasData,\n  // 사용 중인 병상에 KTAS 레벨 데이터 추가\n  {\n    name: \"미사용\",\n    value: unusedBeds,\n    color: \"#DDDDDD\"\n  } // 미사용 병상 (회색)\n  ];\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"KTAS \\uBCD1\\uC0C1 \\uC810\\uC720\\uC728\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 200,\n        children: [\" \", /*#__PURE__*/_jsxDEV(PieChart, {\n          children: [/*#__PURE__*/_jsxDEV(Pie, {\n            data: fullData,\n            dataKey: \"value\",\n            nameKey: \"name\",\n            cx: \"50%\",\n            cy: \"50%\",\n            innerRadius: 50,\n            outerRadius: 80,\n            labelLine: false,\n            label: ({\n              name,\n              value,\n              cx,\n              cy,\n              midAngle,\n              innerRadius,\n              outerRadius\n            }) => {\n              const RADIAN = Math.PI / 180;\n              const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n              const x = cx + radius * Math.cos(-midAngle * RADIAN);\n              const y = cy + radius * Math.sin(-midAngle * RADIAN);\n              return /*#__PURE__*/_jsxDEV(\"text\", {\n                x: x,\n                y: y,\n                fill: \"black\" // 글씨 색상을 차트 안에서 보이도록 설정\n                ,\n                textAnchor: \"middle\" // 텍스트를 중앙에 정렬\n                ,\n                dominantBaseline: \"central\",\n                children: `${value}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this);\n            },\n            children: fullData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: entry.color\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label-container\",\n      children: fullData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundColor: entry.color\n          },\n          className: \"label-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), entry.name, \": \", entry.value, \" Beds (\", entry.percentage, \"%)\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = Ktas;\nexport default Ktas;\nvar _c;\n$RefreshReg$(_c, \"Ktas\");","map":{"version":3,"names":["React","PieChart","Pie","Cell","Legend","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","Ktas","totalBeds","usedBeds","unusedBeds","tasData","name","value","color","fullData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","dataKey","nameKey","cx","cy","innerRadius","outerRadius","labelLine","label","midAngle","RADIAN","Math","PI","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","map","entry","index","style","backgroundColor","percentage","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/hosfit/hosFIt/front/src/Components/Ktas.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../Components/Ktas.css\";\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  Legend,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst Ktas = () => {\r\n  const totalBeds = 100; // 총 병상 수\r\n  const usedBeds = 78; // 사용 중인 병상 수\r\n  const unusedBeds = totalBeds - usedBeds; // 미사용 병상 수\r\n\r\n  // 사용 중인 병상의 KTAS 레벨 비율\r\n  const tasData = [\r\n    { name: \"KTAS 1\", value: 30, color: \"#0000FF\" }, // 파란색 (KTAS 1)\r\n    { name: \"KTAS 2\", value: 20, color: \"#FF0000\" }, // 빨간색 (KTAS 2)\r\n    { name: \"KTAS 3\", value: 10, color: \"#FFFF00\" }, // 노란색 (KTAS 3)\r\n    { name: \"KTAS 4\", value: 10, color: \"#00FF00\" }, // 초록색 (KTAS 4)\r\n    { name: \"KTAS 5\", value: 8, color: \"#FFFFFF\" }, // 흰색 (KTAS 5)\r\n  ];\r\n\r\n  // 사용 중 vs 미사용 병상을 포함한 데이터\r\n  const fullData = [\r\n    ...tasData, // 사용 중인 병상에 KTAS 레벨 데이터 추가\r\n    { name: \"미사용\", value: unusedBeds, color: \"#DDDDDD\" }, // 미사용 병상 (회색)\r\n  ];\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <nav>\r\n        {/* <ul>  그래프에 밀려 잠정 폐기\r\n        <li className={activeMenu === 'main' ? 'active' : ''} onClick={() => handleMenuClick('main')}>\r\n          <MainIcon size={20} /> Main\r\n        </li>\r\n        <li className={activeMenu === 'patientManagement' ? 'active' : ''} onClick={() => handleMenuClick('patientManagement')}>\r\n          <PatientIcon size={20} /> 환자 관리\r\n        </li>\r\n        <li className={activeMenu === 'medicalRecords' ? 'active' : ''} onClick={() => handleMenuClick('medicalRecords')}>\r\n          <MedicalRecordIcon size={20} /> 진료 기록\r\n        </li>\r\n        <li className={activeMenu === 'statistics' ? 'active' : ''} onClick={() => handleMenuClick('statistics')}>\r\n          <StatisticsIcon size={20} /> 통계\r\n        </li>\r\n      </ul> */}\r\n      </nav>\r\n      <div className=\"chart-container\">\r\n        <h3>KTAS 병상 점유율</h3>\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n          {\" \"}\r\n          {/* 반응형으로 차트 크기 조정 */}\r\n          <PieChart>\r\n            <Pie\r\n              data={fullData}\r\n              dataKey=\"value\"\r\n              nameKey=\"name\"\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              innerRadius={50}\r\n              outerRadius={80}\r\n              labelLine={false}\r\n              label={({\r\n                name,\r\n                value,\r\n                cx,\r\n                cy,\r\n                midAngle,\r\n                innerRadius,\r\n                outerRadius,\r\n              }) => {\r\n                const RADIAN = Math.PI / 180;\r\n                const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n                const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n                const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n                return (\r\n                  <text\r\n                    x={x}\r\n                    y={y}\r\n                    fill=\"black\" // 글씨 색상을 차트 안에서 보이도록 설정\r\n                    textAnchor=\"middle\" // 텍스트를 중앙에 정렬\r\n                    dominantBaseline=\"central\"\r\n                  >\r\n                    {`${value}`}\r\n                  </text>\r\n                );\r\n              }}\r\n            >\r\n              {fullData.map((entry, index) => (\r\n                <Cell key={`cell-${index}`} fill={entry.color} />\r\n              ))}\r\n            </Pie>\r\n            <Tooltip />\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      <div className=\"label-container\">\r\n        {fullData.map((entry, index) => (\r\n          <div key={index} className=\"label-item\">\r\n            <span\r\n              style={{ backgroundColor: entry.color }}\r\n              className=\"label-dot\"\r\n            ></span>\r\n            {entry.name}: {entry.value} Beds ({entry.percentage}%)\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Ktas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}