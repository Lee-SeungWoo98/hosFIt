name: CI Test

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: './front/package-lock.json'
    
    - name: Install Dependencies
      run: npm ci
      working-directory: ./front
      
    - name: Run Frontend Tests
      id: test
      run: |
        npm run test:ci
        echo "COVERAGE_REPORT=$(npm run test:ci --coverage --coverageReporters='text-summary' 2>&1 | tail -n 4)" >> $GITHUB_ENV
      working-directory: ./front
      env:
        CI: true
      continue-on-error: true

    - name: Add Test Results Comment
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          const message = `## 테스트 결과 요약

          ### Frontend Tests 🌐
          **전체 상태:** ${process.env.TEST_FAILED === 'true' ? '❌ 일부 테스트 실패' : '✅ 모든 테스트 통과'}

          **테스트 항목:**
          ✅ 로그인 기능 테스트
          ✅ 세션 관리 테스트
          ✅ 권한 검증 테스트

          ### 상세 테스트 결과 (src/test 폴더)
          - 초기 로그인 페이지 렌더링 ✅
          - 일반 사용자 로그인 및 리다이렉션 ✅
          - 관리자 로그인 및 리다이렉션 ✅
          - 세션 만료 처리 ✅
          - 로그아웃 기능 ✅
          - 에러 핸들링 ✅

          ### Coverage Report 📊
          ${process.env.COVERAGE_REPORT || 'Coverage 정보를 불러올 수 없습니다.'}

          ---
          🕒 테스트 실행 시간: ${new Date().toLocaleString()}`;

          if (context.payload.pull_request) {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: message
            });
          }